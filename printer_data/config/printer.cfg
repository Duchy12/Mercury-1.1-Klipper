## Fluidd
[include fluidd.cfg]

## Moonraker Timelapse
[include timelapse.cfg]

## can0 CAN Board
[include Configs/EBB36.cfg]

## Custom macros
[include Configs/macros.cfg]

## SCS
[include Configs/SCS.cfg]

## Electronics cooling
[include Configs/Electronics_Cooling.cfg]

## Exclude object
[exclude_object]

# Arc support
[gcode_arcs]
resolution: 0.1

## FORCE MOVE FOR DEBUGGING PURPOSES
[force_move]
enable_force_move: True 

## Main MCU
[mcu]
canbus_uuid: 2a464ea14af4

## Octopus pro temp sensor
[temperature_sensor octopus_pro]
sensor_type: temperature_mcu

## RPI temp sensor
[temperature_sensor raspberry_pi]
sensor_type: temperature_host

## Virtual SD Card
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

## Printer
[printer]
kinematics: corexy
max_velocity: 1000
max_accel: 10000
max_z_accel: 200

##  A Stepper - Left
##  Connected to MOTOR_3
[stepper_x]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA2
microsteps: 16
rotation_distance: 40
endstop_pin: !can0:LIMIT_3 # PB6
position_endstop: 240
position_max: 240
homing_speed: 100

##  A Stepper Driver
[tmc2240 stepper_x]
cs_pin: PC7
spi_bus: spi1
run_current: 1.1
interpolate: true

[autotune_tmc stepper_x] 
motor: omc-17he19-2004s
tuning_goal: performance

##  B Stepper - Right
##  Connected to MOTOR_1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 40
endstop_pin: ^PG6
position_endstop: 233
position_max: 233
homing_speed: 100

## B Stepper Driver
[tmc2240 stepper_y]
cs_pin: PD11
spi_bus: spi1
run_current: 1.1
interpolate: true

[autotune_tmc stepper_y]
motor: omc-17he19-2004s
tuning_goal: performance

## Z Stepper - WORKING
## Connected to MOTOR_2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 300

## Z Stepper Driver
[tmc2240 stepper_z]
cs_pin: PC6
spi_bus: spi1
run_current: 0.650
interpolate: true

[autotune_tmc stepper_z]
motor: creality-42-34
tuning_goal: silent

## Heated bed
[heater_bed]
heater_pin: PA1
sensor_pin: PF3
sensor_type: EPCOS 100K B57560G104F
min_temp: 0
max_temp: 130

## BLTouch
[bltouch]
sensor_pin: ^can0:PROBE_2 # PB8
control_pin: can0:PROBE_1 # PB9
x_offset: -35.75
y_offset: -8.75
samples: 3
samples_result: median
sample_retract_dist: 4.0
samples_tolerance: 0.1
samples_tolerance_retries: 10
speed: 5

## Safe Z Home
[safe_z_home]
home_xy_position: 153.25, 126.25
z_hop: 10
z_hop_speed: 5

## Bed Mesh
[bed_mesh]
speed: 100
horizontal_move_z: 7
mesh_min: 10,18
mesh_max: 200,210
probe_count: 11, 11
#probe_count: 3,3
algorithm: bicubic

## Filament runout (Microswitch)
[filament_switch_sensor Filament_Runout_Sensor]
pause_on_runout: False
runout_gcode: RUNOUT_PAUSE
switch_pin: PG9
insert_gcode: RUNOUT_LOADED
[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[input_shaper]
shaper_freq_x: 70
shaper_type_x: mzv
shaper_freq_y: 44.8
shaper_type_x: mzv
damping_ratio_x: 0.044
damping_ratio_y: 0.051

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED
    

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.213
#*# pid_ki = 1.756
#*# pid_kd = 763.242
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.876
#*# pid_ki = 1.238
#*# pid_kd = 79.757
#*#
#*# [bltouch]
#*# z_offset = 2.525
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.072500, 0.083750, 0.022500, -0.002500, -0.006250, -0.050000, -0.042500, -0.037500, 0.016250, -0.020000, -0.003750
#*# 	0.108750, 0.135000, 0.066250, 0.067500, 0.052500, 0.047500, 0.067500, 0.031250, 0.063750, -0.003750, 0.051250
#*# 	0.140000, 0.076250, 0.052500, 0.023750, 0.097500, 0.040000, 0.023750, 0.053750, 0.018750, 0.078750, 0.008750
#*# 	0.117500, 0.065000, 0.053750, 0.077500, 0.043750, 0.047500, 0.090000, 0.036250, 0.035000, 0.040000, 0.057500
#*# 	0.120000, 0.091250, 0.020000, 0.027500, 0.052500, 0.058750, 0.042500, 0.022500, 0.002500, 0.012500, 0.057500
#*# 	0.120000, 0.071250, 0.042500, -0.020000, 0.091250, 0.077500, 0.026250, 0.008750, 0.065000, 0.018750, 0.015000
#*# 	0.058750, 0.001250, -0.027500, 0.025000, 0.025000, 0.057500, 0.033750, 0.032500, -0.027500, 0.031250, 0.011250
#*# 	0.081250, 0.001250, -0.028750, -0.053750, 0.003750, 0.026250, -0.033750, -0.056250, -0.027500, 0.006250, 0.040000
#*# 	0.087500, 0.023750, 0.047500, -0.012500, -0.002500, -0.038750, -0.022500, -0.008750, -0.016250, 0.008750, 0.007500
#*# 	0.093750, 0.031250, -0.012500, 0.026250, 0.016250, -0.003750, -0.058750, 0.038750, 0.000000, 0.005000, 0.090000
#*# 	0.088750, 0.017500, -0.057500, -0.007500, -0.045000, -0.038750, -0.007500, 0.016250, 0.020000, 0.115000, 0.108750
#*# x_count = 11
#*# y_count = 11
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 200.0
#*# min_y = 18.0
#*# max_y = 209.99999999999997
